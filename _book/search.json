[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Visualization for Social Scientists",
    "section": "",
    "text": "Welcome\nThis book offers a gentle introduction to data visualization using R and – occasionally – python. In this book you will learn how to make beautiful, informative, and reproducible visualizations with examples from different social sciences. It is inspired by a course on Data Visualization that I taught at the Barcelona Institute of International Studies. Thus, a special thanks goes out to the many graduate students whose efforts, questions, and feedback helped greatly improve the content of this book!",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#contact",
    "href": "index.html#contact",
    "title": "Data Visualization for Social Scientists",
    "section": "Contact",
    "text": "Contact\nThis book is in open review. If you have any questions, comments or suggestions; please contact me by email or report an issue on GitHub.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#build-information",
    "href": "index.html#build-information",
    "title": "Data Visualization for Social Scientists",
    "section": "Build Information",
    "text": "Build Information\nThis book was built using R version 4.4.0 (2024-04-24). For specific package versions please see the session information below:\n\n\nR version 4.4.0 (2024-04-24)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Sonoma 14.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Vilnius\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] htmlwidgets_1.6.4 compiler_4.4.0    fastmap_1.1.1     cli_3.6.3        \n [5] tools_4.4.0       htmltools_0.5.8.1 rstudioapi_0.16.0 rmarkdown_2.26   \n [9] knitr_1.46        jsonlite_1.8.8    xfun_0.43         digest_0.6.35    \n[13] rlang_1.1.4       evaluate_0.23",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#license",
    "href": "index.html#license",
    "title": "Data Visualization for Social Scientists",
    "section": "License",
    "text": "License\nData Visualization for Social Science by Alfredo Hernandez Sanchez is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.Based on a work at https://github.com/alhdzsz/dviz_book.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "Why Visualize?\nIn an experiment conducted by researchers from University College London (Mcmanus and Gesiak 2014), 277 participants were asked to look at several pairs of paintings: one of the pairs was an original by abstract painter Piet Mondrian, and the other was fake version that closely resembled it.1 The participants where asked:\nThe results suggested that people could identify the originals with some degree of accuracy (\\(\\mu\\) 54.7%, SE .40). This experiment “implies people know something about what makes a real Mondrian.” In other words, we have an intuition of proportion and beauty.\nOne of the most fun things about data visualization is making things that are beautiful. In making them, you learn a lot about not just the patterns you are displaying, but the scope and limitations of the underlying data. Having taught courses on data viz for several years, I have found that there is a correlation between the effort put into making a plot beautiful and how accurately it conveys the intended message.\nData visualization plays numerous roles in the social sciences, from summarizing large amounts of information in a small space, to supporting claims about patterns and relationships among a vast array of indicators of human behavior.\nZinovyev (2010) identifies four types of visualizations in political science:\nIn addition, visualization is often the last part of a data analysis pipeline. To visualize a data set you must first answer some questions:\nIn other words, to create visualizations you must also know what data is (or not) out there (literature review), develop an intuition about what patterns you might find in it (research question/hypothesis), clean and wrangle lots of often messy data sets (methodology), create the visualization (results) and share it with your target audience (discussion). Think of the process as writing a small research paper. A single .png often speaks more than a thousand lines of code!",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "intro.html#why-visualize",
    "href": "intro.html#why-visualize",
    "title": "1  Introduction",
    "section": "",
    "text": "Statistical graphics and infographics with extensive use of color, form, size, shape and style to superimpose many quantitative variables in the same chart or diagram\nGeographical information systems (GIS) to visualize geographically-linked data\nGraph visualization or network maps for representing relations between objects\nProjection of multidimensional data on low-dimensional screens with further visualization, data cartography\n\n\n\n\nWhat do I want to visualize?\nWhere can I get the data?\nHow should my data set look like?\nWhat is the data telling me?\n\n\n\nAbout this Book\nThe examples used throughout this book are closely related to corruption since that is one of my main areas of interest. This also allows me to explore different types of data that social scientists are likely to encounter such as surveys, text, networks, geo-locations, administrative records (Big Data), and regression models.\nAll used data is open source, though it often comes through APIs2. Sometimes, to access these data sets you need a token or secret. For obvious reasons, I will not share my own tokens here, but I will show you where the information you need should go in the code. When possible, I will also provide a clean version of the data used so you can experiment with it.\nTo keep things as simple as possible, the book follows this syntax:\n\npackages are placed inside a shaded box (e.g. ggplot2),\ncommon functions() are also inside a shaded box, and followed by parentheses (e.g. mutate() from tidyverse or class() from base R),\nless common functions() are the same, but the package is explicitly called :: (e.g. reshape2::melt()),\nshort R commands (e.g. %in%), are also shaded, non-R commands are in bold (e.g. Ctrl + p),\nthe common pipe operator %&gt;% will be used when possible in the code3 (i.e., we will mostly use the tidyverse syntax over base R).\n\n\n\nRecommended Readings\nThis book does not expect a lot of familiarity with R or programming, though some knowledge of statistics will be very helpful. The appendix covers the basics of working with R and RStudio during the first few sessions. Some tutorial videos on the basics of working with RStudio are available here. Similarly, you may also consult the following open-source books on R:4\n\nR Cookbook (Long and Teetor 2019)\nR for Data Science (Grolemund and Wickham 2016)\nR Graphics Cookbook (Chang 2018)\nEfficient R Programming (Gillespie and Lovelace 2016)\nHands-on Programming with R (Grolemund 2014)\nFundamentals of Data Visualization (Wilke 2019)\nText Mining with R (Silge and Robinson 2017)\nAn Introduction to R (Venables, Smith, and R Core Team 2021)\nR Markdown: The Definitive Guide (Xie, Allaire, and Grolemund 2018)\nR Markdown Cookbook (Xie, Dervieux, and Riederer 2020)\n\n\n\n\n\nChang, Winston. 2018. R Graphics Cookbook: Practical Recipes for Visualizing Data. Second. Sebastopol, California: O’Reilly Media. https://r-graphics.org/.\n\n\nGillespie, Colin, and Robin Lovelace. 2016. Efficient r Programming: A Practical Guide to Smarter Programming. Sebastopol, California: O’Reilly Media. https://csgillespie.github.io/efficientR/.\n\n\nGrolemund, Garrett. 2014. Hands-on Programming with r: Write Your Own Functions and Simulations. Sebastopol, California: O’Reilly Media. https://rstudio-education.github.io/hopr/.\n\n\nGrolemund, Garrett, and Hadley Wickham. 2016. R for Data Science. Sebastopol, California: O’Reilly Media. https://r4ds.had.co.nz/.\n\n\nLong, JD, and Paul Teetor. 2019. R Cookbook: Proven Recipes for Data Analysis, Statistics, and Graphics. Second. Sebastopol, California: O’Reilly Media. https://rc2e.com/.\n\n\nMcmanus, Ian, and Paul Gesiak. 2014. “Experimenting with Mondrian: Comparing the Method of Production with the Method of Choice.” In. https://doi.org/10.13140/2.1.1561.2967.\n\n\nSilge, Julia, and David Robinson. 2017. Text Mining with r: A Tidy Approach. Sebastopol, California: O’Reilly Media. https://www.tidytextmining.com/.\n\n\nVenables, W. N., D. M. Smith, and the R Core Team. 2021. An Introduction to r. https://cran.r-project.org/doc/manuals/R-intro.pdf.\n\n\nWilke, Claus O. 2019. Fundamentals of Data Visualization: A Primer on Making Informative and Compelling Figures. Sebastopol, California: O’Reilly Media. https://clauswilke.com/dataviz/.\n\n\nXie, Yihui, J. J. Allaire, and Garrett Grolemund. 2018. R Markdown: The Definitive Guide. Boca Raton, Florida: Chapman; Hall/CRC. https://bookdown.org/yihui/rmarkdown.\n\n\nXie, Yihui, Christophe Dervieux, and Emily Riederer. 2020. R Markdown Cookbook. Boca Raton, Florida: Chapman; Hall/CRC. https://bookdown.org/yihui/rmarkdown-cookbook.\n\n\nZinovyev, iAndrei. 2010. “Data Visualization in Political and Social Sciences.” In. https://arxiv.org/abs/1008.1188.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "intro.html#footnotes",
    "href": "intro.html#footnotes",
    "title": "1  Introduction",
    "section": "",
    "text": "The pseudo-Mondrians were created by jittering all the lines in the original but keeping the same relative positions.↩︎\nAPI is short for application programming interface and it is a great way to get data directly from the source. Many data providers such as the World Bank offer APIs that connect directly to your R session.↩︎\nFor Windows users, the %&gt;% shortcut in RStudio is Ctrl + Shift + M and for Mac users it is Cmd + Shift + M.↩︎\nFor a comprehensive list of R-related books, consult the R-Project Website↩︎",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "ggbasics.html",
    "href": "ggbasics.html",
    "title": "2  The Grammar of Graphics",
    "section": "",
    "text": "2.1 The tidyverse packages\nThroughout this course, we will be using tidy data principles1 to create several types of visualizations. The main package we will use is the tidyverse, which includes several useful tools for data wrangling, analysis and visualization. The first step then is to install the package! You can do this from the packages vignette in explorer pane in RStudio, or by writing install.packages(\"tidyverse\") into the console pane.\nOnce the package has been installed, the next step will be to load the library so that we can start using it! Simply write the command below in a script the editor pane and click run, or directly in the console pane and press enter.\nAfter installing tidyverse packages, we will get access to two very important functions which we will be using extensively. The first is the the command ggplot() from the package ggplot2 which will allow us to make plots based on the grammar of graphics. The second is the pipe operator or %&gt;% from the dplyr package, which translates loosely to the phrase “and then”, and which we will use to put several commands and functions together in a pipeline.2\nAt the top of every R script, you will see the libraries used. For almost every chapter of this book we will use the two libraries below. IMPORTANT: every time you start a new R script or session, you must call on these libraries so R knows which commands you want to use!\nlibrary(ggplot2)\nlibrary(dplyr)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>The Grammar of Graphics</span>"
    ]
  },
  {
    "objectID": "ggbasics.html#the-ggplot2-package",
    "href": "ggbasics.html#the-ggplot2-package",
    "title": "2  The Grammar of Graphics",
    "section": "2.2 The ggplot2 Package",
    "text": "2.2 The ggplot2 Package\nThe ggplot2 package is installed and loaded alongside the tidyverse package, though it can – and should – be called on separately. This is a very powerful tool to make print-quality graphs and all sorts of visual outputs. To do this, it draws on the grammar of graphics, which is a concept developed by Leland Wilkinson (Wilkinson 2005). The main idea behind this complex book is that plots can be divided into several elements, each with a specific role to play. ggplot2 has 7 such elements:\n\nData\nAesthetics\nLayers\nScales\nCoordinates\nFacets\nThemes\n\nThroughout this chapter, we will focus on the first three (Data, Aesthetics, Layers) which are the minimum requirements to make a basic plot. The element data tells R which vector(s) from your environment are going to be used to draw the plot. The aesthetics element determines which variable(s) will be used and in what capacity. The layers element tells R which type of geometry you wish to draw and in which order.\n\ndf %&gt;% \n  ggplot(aes(x=var1,y=var2))+\n  geom_point()\n\nIn the example above, we are telling R that there is an object df in our environment which has at least two vectors (columns), one called var1 and another var2. We are also telling it that we want var1 to be our x axis and var2 to be our y axis, we define this inside the aes() command either globally for the plot (i.e. inside the ggplot() command) or specifically for a layer (i.e. inside geom_point()). Finally, we are telling R that we want to make a scatter plot by defining the layer geom_point(). Notice that after the ggplot() command and until the end of the graph, we use a \\(+\\) sign.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>The Grammar of Graphics</span>"
    ]
  },
  {
    "objectID": "ggbasics.html#example",
    "href": "ggbasics.html#example",
    "title": "2  The Grammar of Graphics",
    "section": "2.3 Example",
    "text": "2.3 Example\nTo make our first ggplot plot, we will use the mtcars data set as an example.\n\ndata(\"mtcars\")\n\nThe cars data set has 32 observations and 11 variables. This data set comes pre-loaded with R and it often used in examples. Let’s see what is inside!\n\n\n\n\nTable 2.1: The Motor Trend Car Road Tests Data Set\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n\nMazda RX4\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nDatsun 710\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\nHornet 4 Drive\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\nHornet Sportabout\n18.7\n8\n360.0\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n\n\nValiant\n18.1\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n\n\nDuster 360\n14.3\n8\n360.0\n245\n3.21\n3.570\n15.84\n0\n0\n3\n4\n\n\nMerc 240D\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n\n\nMerc 230\n22.8\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n\n\nMerc 280\n19.2\n6\n167.6\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\n\n\nMerc 280C\n17.8\n6\n167.6\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\n\n\nMerc 450SE\n16.4\n8\n275.8\n180\n3.07\n4.070\n17.40\n0\n0\n3\n3\n\n\nMerc 450SL\n17.3\n8\n275.8\n180\n3.07\n3.730\n17.60\n0\n0\n3\n3\n\n\nMerc 450SLC\n15.2\n8\n275.8\n180\n3.07\n3.780\n18.00\n0\n0\n3\n3\n\n\nCadillac Fleetwood\n10.4\n8\n472.0\n205\n2.93\n5.250\n17.98\n0\n0\n3\n4\n\n\nLincoln Continental\n10.4\n8\n460.0\n215\n3.00\n5.424\n17.82\n0\n0\n3\n4\n\n\nChrysler Imperial\n14.7\n8\n440.0\n230\n3.23\n5.345\n17.42\n0\n0\n3\n4\n\n\nFiat 128\n32.4\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n\n\nHonda Civic\n30.4\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n\n\nToyota Corolla\n33.9\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n\n\nToyota Corona\n21.5\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n\n\nDodge Challenger\n15.5\n8\n318.0\n150\n2.76\n3.520\n16.87\n0\n0\n3\n2\n\n\nAMC Javelin\n15.2\n8\n304.0\n150\n3.15\n3.435\n17.30\n0\n0\n3\n2\n\n\nCamaro Z28\n13.3\n8\n350.0\n245\n3.73\n3.840\n15.41\n0\n0\n3\n4\n\n\nPontiac Firebird\n19.2\n8\n400.0\n175\n3.08\n3.845\n17.05\n0\n0\n3\n2\n\n\nFiat X1-9\n27.3\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n\n\nPorsche 914-2\n26.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n\n\nLotus Europa\n30.4\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n\n\nFord Pantera L\n15.8\n8\n351.0\n264\n4.22\n3.170\n14.50\n0\n1\n5\n4\n\n\nFerrari Dino\n19.7\n6\n145.0\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\n\n\nMaserati Bora\n15.0\n8\n301.0\n335\n3.54\n3.570\n14.60\n0\n1\n5\n8\n\n\nVolvo 142E\n21.4\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2\n\n\n\n\n\n\n\n\n\n\nOnce the data has been loaded, let’s use the pipe operator to do some cleaning. In the code below, we are creating a new object called df - a common way of naming data frames - and filling it with the mtcars data with some modifications. We are asking R to a) take the mtcars data, b) and then %&gt;% select four variables, c) and then %&gt;% give them new name. This pipeline is saved into the new object df.\n\ndf &lt;- mtcars %&gt;% \n  select(cyl, mpg, hp, am) %&gt;% \n  rename(cylinders=cyl,\n         mileage=mpg,\n         horsepower=hp,\n         transmission=am) \n\nWith this df stored in our environment, we can start making plots. Let’s begin with a histogram that shows the distribution of mileage across the 32 variables in our data set. For this we will use geom_histogram.\n\ndf %&gt;% #Our Data \n  ggplot(aes(x= mileage))+ #Our Aesthetics\n  geom_histogram() #Our Layer\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nA histogram with default settings\n\n\n\n\nFigure @ref(fig:hist-fig) shows us our very first ggplot, which shows the number of observations at each of the binned levels. From this plot we know that most cars in our data set do around 15 miles per gallon. However, it is not very nice looking! We can improve this by adding more parameters.\nYou might notice that below the code R is giving us a warning: stat_bin() using bins = 30. Pick better value with binwidth. Here the software is hinting that we might want to change the number of bars (bins) or their width (binwidth) in our plot to make it more informative.3 In figure @ref(fig:hist2-fig) we change the number of bins to 5 inside our geom_histogram layer, and also declare the color of the column fill (darkgray) and the outline (black).\n\ndf %&gt;% \n  ggplot(aes(x= mileage))+ \n  geom_histogram(bins = 5, fill=\"darkgray\", color=\"black\") \n\n\n\n\nA nicer looking histogram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWilkinson, Leland. 2005. The Grammar of Graphics. 2nd ed. New York: Springer-Verlag. https://www.springer.com/gp/book/9780387245447.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>The Grammar of Graphics</span>"
    ]
  },
  {
    "objectID": "ggbasics.html#footnotes",
    "href": "ggbasics.html#footnotes",
    "title": "2  The Grammar of Graphics",
    "section": "",
    "text": "These principles are: a) each variable should have its own column, b) each observation should have its own row, and c) each value should have its own cell.↩︎\nFor Windows users, you can use the RStudio short cut ctrl + shift + m to write this pipe %&gt;% operator.↩︎\nMost other software will give you a default based on some parameter such as the Freedman-Diaconis rule, ggplot does not do this, forcing you to experiment with different parameters that best reflect your data.↩︎",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>The Grammar of Graphics</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Chang, Winston. 2018. R Graphics Cookbook: Practical Recipes for\nVisualizing Data. Second. Sebastopol, California: O’Reilly Media.\nhttps://r-graphics.org/.\n\n\nGillespie, Colin, and Robin Lovelace. 2016. Efficient r Programming:\nA Practical Guide to Smarter Programming. Sebastopol, California:\nO’Reilly Media. https://csgillespie.github.io/efficientR/.\n\n\nGrolemund, Garrett. 2014. Hands-on Programming with r: Write Your\nOwn Functions and Simulations. Sebastopol, California: O’Reilly\nMedia. https://rstudio-education.github.io/hopr/.\n\n\nGrolemund, Garrett, and Hadley Wickham. 2016. R for Data\nScience. Sebastopol, California: O’Reilly Media. https://r4ds.had.co.nz/.\n\n\nLong, JD, and Paul Teetor. 2019. R Cookbook: Proven Recipes for Data\nAnalysis, Statistics, and Graphics. Second. Sebastopol, California:\nO’Reilly Media. https://rc2e.com/.\n\n\nMcmanus, Ian, and Paul Gesiak. 2014. “Experimenting with Mondrian:\nComparing the Method of Production with the Method of Choice.”\nIn. https://doi.org/10.13140/2.1.1561.2967.\n\n\nSilge, Julia, and David Robinson. 2017. Text Mining with r: A Tidy\nApproach. Sebastopol, California: O’Reilly Media. https://www.tidytextmining.com/.\n\n\nVenables, W. N., D. M. Smith, and the R Core Team. 2021. An\nIntroduction to r. https://cran.r-project.org/doc/manuals/R-intro.pdf.\n\n\nWilke, Claus O. 2019. Fundamentals of Data Visualization: A Primer\non Making Informative and Compelling Figures. Sebastopol,\nCalifornia: O’Reilly Media. https://clauswilke.com/dataviz/.\n\n\nWilkinson, Leland. 2005. The Grammar of Graphics. 2nd ed. New\nYork: Springer-Verlag. https://www.springer.com/gp/book/9780387245447.\n\n\nXie, Yihui, J. J. Allaire, and Garrett Grolemund. 2018. R Markdown:\nThe Definitive Guide. Boca Raton, Florida: Chapman; Hall/CRC. https://bookdown.org/yihui/rmarkdown.\n\n\nXie, Yihui, Christophe Dervieux, and Emily Riederer. 2020. R\nMarkdown Cookbook. Boca Raton, Florida: Chapman; Hall/CRC. https://bookdown.org/yihui/rmarkdown-cookbook.\n\n\nZinovyev, iAndrei. 2010. “Data Visualization in Political and\nSocial Sciences.” In. https://arxiv.org/abs/1008.1188.",
    "crumbs": [
      "References"
    ]
  }
]